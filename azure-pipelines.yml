# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  branches:
    include:
      - master
  paths:
    exclude:
      - '*.md'
      - '*.MD'
      - 'README.md'
      - 'SECURITY.md'
      - '.gitignore'

pool:
  vmImage: 'ubuntu-16.04'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: Bash@3
  displayName: "Install docker-compose"
  inputs:
    targetType: 'inline'
    script: |
      sudo curl -L https://github.com/docker/compose/releases/download/1.18.0/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
      sudo chmod +x /usr/local/bin/docker-compose

- task: Bash@3
  displayName: "Start a CouchDb instance"
  inputs:
    targetType: 'inline'
    script: |
      cd tests/integration
      docker-compose up -d
      cd -

- task: Bash@3
  displayName: "Build docker container"
  inputs:
    targetType: 'inline'
    script: |
      docker build -t couchdb-lib .

- task: Bash@3
  displayName: "Create test result output folder"
  inputs:
    targetType: 'inline'
    script: |
      mkdir output
      chmod -R 777 output

- task: Bash@3
  displayName: "Wait for CouchDb to be online"
  inputs:
    targetType: 'inline'
    script: |
      scripts/up-test.sh localhost 5985

- task: Bash@3
  displayName: "Run tests in container"
  inputs:
    targetType: 'inline'
    script: |
      HOSTIP=$(ip -4 addr show docker0 | grep -Po 'inet \K[\d.]+')
      docker run --name couchdb_tests -e COUCHDB_HOST=$HOSTIP couchdb-lib:latest test
      docker cp couchdb_tests:/output/integration.xml output/
      docker rm couchdb_tests

- task: PublishTestResults@2
  displayName: "Publish test results to the Azure dashboard"
  inputs:
    testResultsFormat: 'XUnit'
    testResultsFiles: 'output/*.xml'
    failTaskOnFailedTests: true

- task: Bash@3
  displayName: "Create a nuget package"
  env:
    NUGET_ORG_KEY: $(NUGET_KEY)
  inputs:
    targetType: 'inline'
    script: |
      HOSTIP=$(ip -4 addr show docker0 | grep -Po 'inet \K[\d.]+')
      docker run --name couchdb_tests -e NUGET_ORG_KEY=$NUGET_ORG_KEY couchdb-lib:latest nuget
      docker cp couchdb_tests:/output/couchdb.nupkg $(Build.ArtifactStagingDirectory)
      docker rm couchdb_tests
      echo "Contents of the ArtifactStagingDirectory:"
      ls $(Build.ArtifactStagingDirectory)

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'nuget-package'
    publishLocation: 'Container'
